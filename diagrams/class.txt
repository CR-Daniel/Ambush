@startuml
!theme vibrant

skin rose

title Game Architecture - Class Diagram

class GameManager {
  - state : GameState
  + setState(state : GameState)
  + notifyStateChange()
  - handleStateChange()
}

class DifficultySelector {
  - selectionBalls : DifficultySelectionBall[]
  + disableColliders()
  + selectDifficulty(difficulty : Difficulty)
}

class DifficultySelectionBall {
  - difficultyType : Difficulty
  + onCollision()
}

class InputManager {
  + handleInput(inputType : InputType)
}

class UIManager {
  + updateHighScore(difficulty : Difficulty)
  + togglePauseMenu()
  + fadeView()
}

class WaveManager {
  + spawnEnemies()
}

class CometManager {
  + spawnComet()
}

class SceneManager {
  + loadSkybox()
}

class HapticsManager {
  + triggerRumble(hand : Hand, intensity : float, duration : float)
}

enum GameState {
  DifficultySelection
  Play
  Pause
  End
}

enum Difficulty {
  Easy
  Normal
  Hard
  Extreme
}

enum InputType {
  NextSong
  ExitGame
  VolumeDown
  VolumeUp
  Pause
}

GameManager -down-> DifficultySelector
GameManager -down-> UIManager
GameManager -down-> WaveManager
GameManager -down-> CometManager
GameManager -down-> SceneManager
GameManager -down-> HapticsManager
InputManager -right-> GameManager
DifficultySelector -right-> DifficultySelectionBall

@enduml
